select 
	fLemma,
	sum(total) total,
	json_agg(ROW(qLemma, total, is1, is2, is3, is4, is5)) 
from (
	select 
		feature.lemma fLemma, 
		qualifier.lemma qLemma, 
		count(distinct feature.id_review) as total,
		sum(case when review.rating = 1 then 1 else 0 end) is1,
		sum(case when review.rating = 2 then 1 else 0 end) is2,
		sum(case when review.rating = 3 then 1 else 0 end) is3,
		sum(case when review.rating = 4 then 1 else 0 end) is4,
		sum(case when review.rating = 5 then 1 else 0 end) is5,
		row_number()
		OVER (partition BY feature.lemma
		      ORDER BY count(distinct feature.id_review) desc
		      ) as num
	from 
		yelp_restaurants.feature  feature
		inner join yelp_restaurants.review as review on feature.id_review = review.id
		inner join yelp_restaurants.qualifier as qualifier on qualifier.id_feature = feature.id  
	where feature.lemma = ANY ('{
		food,
		time,
		service,
		restaurant,
		menu,
		thing,
		price,
		table,
		sauce,
		meal,
		people,
		way,
		order,
		friend,
		flavor,
		drink,
		dish,
		night,
		lot,
		salad,
		day,
		staff,
		everything,
		experience,
		something,
		side,
		bit,
		server,
		bar,
		star,
		review,
		dinner,
		cheese,
		lunch,
		chicken,
		area,
		meat,
		minute,
		hour,
		nothing,
		plate,
		year,
		location,
		sandwich,
		taste,
		item,
		fries,
		bread,
		atmosphere,
		dessert,
		home,
		portion,
		pizza,
		anything,
		selection,
		rice,
		kind,
		spot,
		soup,
		roll,
		waitress,
		quality,
		burger,
		beer,
		choice,
		option,
		appetizer,
		visit,
		fan,
		everyone,
		town,
		part,
		week,
		guy,
		beef,
		steak,
		owner,
		waiter,
		course,
		piece,
		cream,
		room,
		potato,
		chip,
		reason,
		one,
		husband,
		couple,
		wine,
		decor,
		point,
		family,
		name,
		sushi,
		top,
		love,
		fish,
		breakfast,
		group}'::varchar[]) 
	group by feature.lemma, 
		qualifier.lemma
) as res1
where num <=50
group by fLemma
order by total
--order by c desc